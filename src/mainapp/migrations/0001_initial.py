# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2018-03-07 11:33
from __future__ import unicode_literals

import ckeditor.fields
import ckeditor_uploader.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('yandex_cash_register', '0006_auto_20170430_2215'),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=200, verbose_name='Телефоны')),
                ('email', models.CharField(max_length=200, verbose_name='E-mail для контактов')),
                ('emails_send', models.CharField(default='', help_text='Можно указывать несколько значений через запятую.', max_length=200, verbose_name='E-майл для заявок')),
                ('worktime', models.CharField(max_length=200, verbose_name='Время работы')),
                ('slug', models.SlugField(default='', verbose_name='Слаг')),
                ('callibri', models.CharField(blank=True, default='', max_length=50, verbose_name='Callibri')),
                ('lat', models.FloatField(default=0.0, verbose_name='широта')),
                ('lon', models.FloatField(default=0.0, verbose_name='долгота')),
                ('order', models.PositiveIntegerField(default=0)),
                ('code', models.CharField(blank=True, help_text='Должен совпадать с кодом из API https://api.wge.ru/sportclub/hs/fitnes_mob/clubs', max_length=200, null=True, unique=True, verbose_name='код в системе 1С')),
                ('policy_link', models.URLField(blank=True, help_text='необходимо указать полный URL, например https://site.domain/something', null=True, verbose_name='ссылка на политику конфиденциальности')),
                ('cash_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='yandex_cash_register.CashRegister')),
            ],
            options={
                'verbose_name': 'клуб',
                'verbose_name_plural': 'клубы',
            },
        ),
        migrations.CreateModel(
            name='EditTextField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.IntegerField(choices=[(1, 'Программы')], default=1, verbose_name='страница')),
                ('context', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='содержание')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.Club', verbose_name='клуб')),
            ],
            options={
                'verbose_name': 'текстовый блок',
                'verbose_name_plural': 'текстовые блоки',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(choices=[(71, '07:00'), (72, '07:15'), (73, '07:30'), (74, '07:45'), (81, '08:00'), (82, '08:15'), (83, '08:30'), (84, '08:45'), (91, '09:00'), (92, '09:15'), (93, '09:30'), (94, '09:45'), (101, '10:00'), (102, '10:15'), (103, '10:30'), (104, '10:45'), (111, '11:00'), (112, '11:15'), (113, '11:30'), (114, '11:45'), (121, '12:00'), (122, '12:15'), (123, '12:30'), (124, '12:45'), (131, '13:00'), (132, '13:15'), (133, '13:30'), (134, '13:45'), (141, '14:00'), (142, '14:15'), (143, '14:30'), (144, '14:45'), (151, '15:00'), (152, '15:15'), (153, '15:30'), (154, '15:45'), (161, '16:00'), (162, '16:15'), (163, '16:30'), (164, '16:45'), (171, '17:00'), (172, '17:15'), (173, '17:30'), (174, '17:45'), (181, '18:00'), (182, '18:15'), (183, '18:30'), (184, '18:45'), (191, '19:00'), (192, '19:15'), (193, '19:30'), (194, '19:45'), (201, '20:00'), (202, '20:15'), (203, '20:30'), (204, '20:45'), (211, '21:00'), (212, '21:15'), (213, '21:30'), (214, '21:45'), (221, '22:00'), (222, '22:15'), (223, '22:30'), (224, '22:45')], verbose_name='время начала')),
                ('duration', models.IntegerField(help_text='целое число в минутах', verbose_name='длительность')),
            ],
            options={
                'verbose_name': 'занятие',
                'verbose_name_plural': 'занятия',
            },
        ),
        migrations.CreateModel(
            name='EntryTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='название')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='изображение')),
            ],
            options={
                'verbose_name': 'шаблон занятия',
                'verbose_name_plural': 'шаблоны занятий',
            },
        ),
        migrations.CreateModel(
            name='FitnesZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200, verbose_name='название')),
                ('image', models.ImageField(upload_to='', verbose_name='рисунок')),
                ('link', models.URLField(verbose_name='ссылка')),
                ('short_description', models.CharField(default='', max_length=195, verbose_name='Краткое описание')),
                ('order', models.PositiveIntegerField(default=0)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.Club', verbose_name='клуб')),
            ],
            options={
                'verbose_name': 'фитнес-зона',
                'verbose_name_plural': 'фитнес-зоны',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.IntegerField(choices=[(2, 'Заказать звонок'), (3, 'Заказать абонемент')], verbose_name='Форма')),
                ('title', models.CharField(default='', max_length=200, verbose_name='заголовок')),
                ('context', ckeditor_uploader.fields.RichTextUploadingField()),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Club', verbose_name='Клуб')),
            ],
            options={
                'verbose_name': 'Форма',
                'verbose_name_plural': 'Формы',
            },
        ),
        migrations.CreateModel(
            name='FormRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formname', models.IntegerField(choices=[(1, 'Бесплатный фитнес-день'), (2, 'Заказать звонок'), (3, 'Заказать абонемент')], verbose_name='Форма')),
                ('content', models.TextField(verbose_name='Текст запроса')),
                ('daterequest', models.DateTimeField(auto_now_add=True, verbose_name='Дата заявки')),
                ('mainpage', models.BooleanField(default=False, verbose_name='Заявка с главной')),
            ],
            options={
                'verbose_name': 'заявка с форм',
                'verbose_name_plural': 'заявки с форм',
            },
        ),
        migrations.CreateModel(
            name='Gym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('hidden', models.BooleanField(default=False, verbose_name='скрыть')),
                ('club', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Club', verbose_name='Клуб')),
            ],
            options={
                'verbose_name': 'зал',
                'verbose_name_plural': 'залы',
            },
        ),
        migrations.CreateModel(
            name='MainInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=200, verbose_name='телефон')),
            ],
            options={
                'verbose_name': 'основная информация',
                'verbose_name_plural': 'основная информация',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=65, verbose_name='заголовок')),
                ('slug', models.SlugField(default='', max_length=200, unique=True, verbose_name='слаг')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='дата')),
                ('image', models.ImageField(default='', upload_to='', verbose_name='миниатюра')),
                ('short_text', models.TextField(default='', help_text='Максимальная длина анонса - 210 символов. Все остальные символы будут удалены.', max_length=210, verbose_name='краткий текст новости')),
                ('full_text', ckeditor_uploader.fields.RichTextUploadingField(default='', verbose_name='полный текст новости')),
                ('hidden', models.BooleanField(default=False, verbose_name='скрыть')),
            ],
            options={
                'verbose_name': 'новость',
                'verbose_name_plural': 'новости',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='заголовок')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='слаг')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Контент')),
                ('url', models.URLField(blank=True, default='', verbose_name='URL')),
                ('order', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'страница',
                'verbose_name_plural': 'страницы',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='название')),
                ('slug', models.SlugField(default='', max_length=200, unique=True, verbose_name='слаг')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='дата')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('full_text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Подробное содержание')),
                ('order', models.PositiveIntegerField(default=0)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.Club', verbose_name='клуб')),
            ],
            options={
                'verbose_name': 'программа',
                'verbose_name_plural': 'программы',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('title_internal', models.CharField(help_text='Отображается только в адм.части', max_length=200, verbose_name='Название')),
                ('button_url', models.URLField(blank=True, verbose_name='Ссылка')),
                ('order', models.PositiveIntegerField(default=0)),
                ('club', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Club')),
            ],
            options={
                'verbose_name': 'слайдер',
                'verbose_name_plural': 'слайдеры',
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200, verbose_name='название')),
                ('context', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='содержание')),
                ('club', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Club')),
            ],
            options={
                'verbose_name': 'статическая страница',
                'verbose_name_plural': 'статические страницы',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_action_title', models.CharField(blank=True, max_length=65, null=True, verbose_name='Верхний заголовок Акции')),
                ('top_action_image', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Верхниее изображение Акции')),
                ('top_action_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Верхнее короткое описание акции')),
                ('feedback_code', models.TextField(blank=True, default='\n<a class="flamp-widget" href="//moscow.flamp.ru/firm/panaekhali_kafe_bar-4504127908393518"  data-flamp-widget-type="responsive-new" data-flamp-widget-id="4504127908393518" data-flamp-widget-width="100%" data-flamp-widget-count="1">Отзывы о нас на Флампе</a><script>!function(d,s){var js,fjs=d.getElementsByTagName(s)[0];js=d.createElement(s);js.async=1;js.src="//widget.flamp.ru/loader.js";fjs.parentNode.insertBefore(js,fjs);}(document,"script");</script>', null=True, verbose_name='Код отзывов')),
                ('feedback_enabled', models.BooleanField(default=True, verbose_name='Включить отзывы на странице')),
                ('title', models.CharField(max_length=65, verbose_name='заголовок')),
                ('slug', models.SlugField(default='', max_length=200, unique=True, verbose_name='слаг')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='дата')),
                ('image', models.ImageField(default='', upload_to='', verbose_name='миниатюра')),
                ('full_text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='полный текст')),
                ('pricing', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='\n<div class="col-md-12 col-md-3">\n    <div class="conditions__time">\n        <div class="conditions__text">\n            Занятия будут проходить по понедельникам и средам в 00:00\n        </div>\n    </div>\n</div>\n<div class="col-md-12 col-md-9">\n    <div class="conditions__item col-xs-12 col-sm-6 col-md-6">\n        <div class="conditions__text col-md-4">\n            Стоимость одного занятия\n        </div>\n\n        <div class="conditions__cost col-md-8">\n            <div class="conditions__price">000 руб</div>\n        </div>\n    </div>\n    <div class="conditions__item col-xs-12 col-sm-6 col-md-6">\n        <div class="conditions__text col-md-4">\n            Блок из 0 занятий\n        </div>\n\n        <div class="conditions__cost col-md-8">\n            <div class="conditions__price">00 000 руб</div>\n            <div class="conditions__saving">\n                <div class="conditions__saving-value">000 руб</div>\n                <div class="conditions__saving-text">Экономия</div>\n            </div>\n        </div>\n    </div>\n    <div class="conditions__item col-xs-12 col-sm-6 col-md-6">\n        <div class="conditions__text col-md-4">\n            Стоимость одного занятия\n        </div>\n\n        <div class="conditions__cost col-md-8">\n            <div class="conditions__price">000 руб</div>\n        </div>\n    </div>\n    <div class="conditions__item col-xs-12 col-sm-6 col-md-6">\n        <div class="conditions__text col-md-4">\n            Блок из 0 занятий\n        </div>\n\n        <div class="conditions__cost col-md-8">\n            <div class="conditions__price">00 000 руб</div>\n            <div class="conditions__saving">\n                <div class="conditions__saving-value">000 руб</div>\n                <div class="conditions__saving-text">Экономия</div>\n            </div>\n        </div>\n    </div>\n</div>\n', null=True, verbose_name='Цены')),
                ('show_button', models.BooleanField(default=False, verbose_name='отображать кнопку')),
                ('text_button', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='текст на кнопке')),
                ('url_button', models.URLField(blank=True, default='', null=True, verbose_name='ссылка кнопки')),
                ('hidden', models.BooleanField(default=False, verbose_name='скрыть')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.Club', verbose_name='клуб')),
            ],
            options={
                'verbose_name': 'акция',
                'verbose_name_plural': 'акции',
            },
        ),
        migrations.CreateModel(
            name='WeekDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'Понедельник'), (2, 'Вторник'), (3, 'Среда'), (4, 'Четверг'), (5, 'Пятница'), (6, 'Суббота'), (7, 'Воскресенье')], verbose_name='День недели')),
                ('gym', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Gym', verbose_name='зал')),
            ],
            options={
                'verbose_name': 'расписание',
                'verbose_name_plural': 'расписания',
            },
        ),
        migrations.CreateModel(
            name='YouTubeChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html', models.TextField(help_text="1. На странице <a href='https://elfsight.com/youtube-channel-plugin-yottie/jquery/#demo'>ссылка</a> настройте виджет.<br>\n                      2. В последнем пункте Get Code скопируйте полученный код виджета (2-ое поле).<br>\n                      3. Вставьте этот код в это поле.")),
                ('club', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Club', verbose_name='клуб')),
            ],
            options={
                'verbose_name': 'YouTube канал',
                'verbose_name_plural': 'YouTube каналы',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='content',
            field=models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, to='mainapp.EntryTemplate', verbose_name='Занятие'),
        ),
        migrations.AddField(
            model_name='entry',
            name='weekday',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mainapp.WeekDay'),
        ),
        migrations.AlterUniqueTogether(
            name='weekday',
            unique_together=set([('gym', 'day')]),
        ),
        migrations.AlterUniqueTogether(
            name='form',
            unique_together=set([('form', 'club')]),
        ),
        migrations.AlterUniqueTogether(
            name='edittextfield',
            unique_together=set([('club', 'page')]),
        ),
    ]
